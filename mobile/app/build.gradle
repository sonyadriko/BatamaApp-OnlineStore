plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'kotlin-parcelize'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.example.tokoonline"
        minSdk androidConfig.minSdk
        targetSdk androidConfig.targetSdk
        versionCode androidConfig.versionCode
        versionName androidConfig.versionName
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            versionNameSuffix "-dev"
            resValue "string", "app_name", "Toko Online Dev"
            debuggable true
        }

        release {
            minifyEnabled true
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility androidConfig.sourceAndTargetCompability
        targetCompatibility androidConfig.sourceAndTargetCompability
    }
    kotlinOptions {
        jvmTarget = androidConfig.jvmTarget
    }
    buildFeatures {
        viewBinding true
    }
    namespace 'com.example.tokoonline'

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    applicationVariants.configureEach { variant ->
        if (variant.getName() == "release") {
            variant.buildConfigField "String", "CLIENT_KEY", properties.getProperty("clientKeyRelease")
            variant.buildConfigField "String", "SERVER_URL", properties.getProperty("serverUrl")
        } else {
            variant.buildConfigField "String", "CLIENT_KEY", properties.getProperty("clientKeySandBox")
            variant.buildConfigField "String", "SERVER_URL", properties.getProperty("serverUrl")
        }
    }
}

dependencies {
    implementation androidx.coreKtx
    implementation androidx.coreKtx
    implementation androidx.appCompat
    implementation material.material
    implementation androidx.constraint
    implementation androidx.vectorDrawable
    implementation androidx.liveData
    implementation androidx.lifecycleVM
    implementation androidx.navKTX
    implementation androidx.navUI
    implementation androidx.annotation

    testImplementation unitTest.junit
    androidTestImplementation androidx.junitExt
    androidTestImplementation androidx.espressoCore

    //firebase realtime db
    implementation platform(firebase.firebaseBom)
    implementation firebase.firebaseDb
    implementation firebase.firebaseAnalytics
    implementation firebase.firebaseAuth
    implementation 'com.google.firebase:firebase-storage-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    // fragment & lifecycle ktx
    implementation "androidx.fragment:fragment-ktx:1.5.5"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"



    // android preference
    implementation 'androidx.preference:preference:1.2.0'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    // gson
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation 'com.jakewharton.timber:timber:5.0.1'

    implementation androidx.multidex

    debugImplementation 'com.midtrans:uikit:2.0.0-SANDBOX'
    releaseImplementation 'com.midtrans:uikit:2.0.0'
}